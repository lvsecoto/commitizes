#!/bin/bash
LIST_DISPLAY_LINE_NUM=6
LIST_DISPLAY_MARKER='\033[;32m*\033[0m'

type_list=\
"feat:A new feature#\
fix:A bug fix#\
docs:Documentation only changes#\
style:Changes that do not affect the meaning of the code #\
refactor:A code change that neither fixes a bug nor adds a feature#\
perf:A code change that improves performance#\
test:Adding missing or correcting existing tests#\
chore:Changes to the build process or auxiliary tools and libraries such as documentation generation#"

# Display 4 line type description, start by specified $1, and put a marker at 
# $2
# 
# LIST_TITLE:
#	Hint show at the top of list
#	If it is null, title line will not show
# LIST_ADAPTER: 
#	Which list(array) you want to display. With two clonm, one is
# 	item name, and two is description(or null), seperating by ':"
#	Each item is seperated by '#'
# LIST_LIST:
#	Use list_adapter_to_list() to convert LIST_ADAPTER to LIST_LIST
# LIST_COUNT
#	Count of list item
# LIST_INDEX_START:
#	Start item
# LIST_INDEX_SELECTED:
#	Selected item
# LIST_DISPLAY_DIR
#	If defined as "back", go back to the line where list display
# LIST_DISPLAY_LINE_NUM:
#	Number of list to display
# LIST_DISPLAY_MARKER:
#	A charater, mark at the beginning of selected line
display_delete_line()
{
	echo -ne "\E[A\E[K"
}

list_adapter_to_list()
{
	IFS_bk=$IFS
	IFS='#'
	LIST_LIST=($LIST_ADAPTER)
	IFS=$IFS_bk
}

list_display()
{
	# move cusor to start
	echo -ne "\r"

	# no wrap
	echo -ne "\033[?7l"

	# hide cusor
	echo -ne "\033[?25l"

	line=$LIST_INDEX_START
	line_max=$[$LIST_INDEX_START + $LIST_DISPLAY_LINE_NUM]
	blank_line_max=$line_max

	if [ $line_max -gt ${#LIST_LIST[@]} ]; then
		line_max=${#LIST_LIST[@]}
	fi

	IFS_bk=$IFS
	IFS=':'
	# put item to console
	while [ $line -lt $line_max ]
	do
		item=(${LIST_LIST[$line]})

		if [ $LIST_INDEX_SELECTED -eq $line ]; then
			marker=$LIST_DISPLAY_MARKER
		else
			marker=" "
		fi

		echo  -e "$marker [${item[0]}] ${item[1]} \E[K"
		line=$[ $line + 1 ]
	done

	IFS=$IFS_bk

	# put blank line
	while [ $line -lt $blank_line_max ]
	do
		echo
		line=$[ $line + 1 ]
	done
	
	# show cusor
	#echo -ne "\033[?25h"

	# Go back to fist line
	if [ "$LIST_DISPLAY_DIR" = "back" ]; then
		echo -ne "\E[$[${LIST_DISPLAY_LINE_NUM}]A"
	fi

}

list_display_clear()
{
	line=0
	echo -ne "\r"
	while [ $line -lt $LIST_DISPLAY_LINE_NUM ]
	do
		echo -e "\E[K"
		line=$[ $line + 1 ]
	done

	# Go back to fist line
	if [ "$LIST_DISPLAY_DIR" = "back" ]; then
		echo -ne "\E[$[${LIST_DISPLAY_LINE_NUM}]A"
	fi
}

list_select_up()
{
	if [ $LIST_INDEX_SELECTED -gt 0 ]; then
		LIST_INDEX_SELECTED=$[ $LIST_INDEX_SELECTED - 1 ]
	fi

	if [ $LIST_INDEX_SELECTED -lt $LIST_INDEX_START ];then
		LIST_INDEX_START=$[ $LIST_INDEX_START - 1]
	fi

}

list_select_down()
{
	index_max=$[ $LIST_COUNTS - 1 ]
	if [ $LIST_INDEX_SELECTED -lt  $index_max ]; then
		LIST_INDEX_SELECTED=$[ $LIST_INDEX_SELECTED + 1 ]
	fi
	
	if [ $[ $LIST_INDEX_SELECTED - $LIST_INDEX_START ] \
		-ge $LIST_DISPLAY_LINE_NUM ]; then
		LIST_INDEX_START=$[ $LIST_INDEX_START + 1 ]
	fi
}

list_open()
{
	# move cusor to start
	echo -ne "\033[?18l"

	# init
	list_adapter_to_list
	LIST_COUNTS=${#LIST_LIST[@]}
	LIST_INDEX_START=0
	LIST_INDEX_SELECTED=0
	LIST_DISPLAY_DIR="back"

	# title
	if [ -n "$LIST_TITLE" ];then
		echo -e $LIST_TITLE
	fi

	list_display
	while [ : ]
	do
		read -s -N1
		case $REPLY in
			j)
				list_select_down
				;;
			k)
				list_select_up
				;;
			q)	
				IFS_bk=$IFS
				IFS=':'
				LIST_SELECT_ITEM=(${LIST_LIST[$LIST_INDEX_SELECTED]})
				IFS=$IFS_bk
				LIST_SELECT_ITEM_NAME=${LIST_SELECT_ITEM[0]}
				LIST_SELECT_ITEM_DESC=${LIST_SELECT_ITEM[1]}
				break
				;;
		esac
		list_display
	done

	# clear screen
	list_display_clear

	if [ -n "$LIST_TITLE" ]; then
		display_delete_line
	fi

}

commit_type()
{
	LIST_ADAPTER=$type_list
	LIST_TITLE="Chose a type:"
	list_open
	COMMIT_TYPE=$LIST_SELECT_ITEM_NAME
}

commit_scope()
{
	read -p "Scope:" COMMIT_SCOPE
	display_delete_line
}

commit_subject()
{
	read -p "Subject:" COMMIT_SUBJECT
	display_delete_line
}

commit_body()
{
	vim
}

commit_footer()
{
	vim
}

# return to home position
home()
{
	echo -ne "\E8"

}

begin()
{
	# clear screan, got to console home position, and save this position.
	echo -ne "\E[H\E[2J\E7"
}

end()
{
	echo [finish...]
}

main()
{
	begin

	commit_type
	commit_scope
	commit_subject
	commit_body
	commit_footer
	echo "$COMMIT_TYPE($COMMIT_SCOPE):$COMMIT_SUBJECT"

}

main
